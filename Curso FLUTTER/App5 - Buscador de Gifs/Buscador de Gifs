 
 share: ^0.6.1+1
transparent_image: ^1.0.0
http: ^0.12.0+2


Parte 1 - Requisitando Dados

  import 'dart:convert';

  import 'package:flutter/material.dart';
  import 'package:http/http.dart' as http;
  import 'package:async/async.dart';


  class HomePage extends StatefulWidget {
    @override
    _HomePageState createState() => _HomePageState();
  }

  class _HomePageState extends State<HomePage> {

    String _search;
    int _offset = 0;

   Future<Map> _getGifs() async{
      http.Response response;

      if(_search == null){
        response = await http.get("https://api.giphy.com/v1/gifs/trending?api_key=zfPDS04AG6JpUhlHYpRfRgMVLiAx8qz8&limit=20&rating=G");
      }else{
        response = await http.get("https://api.giphy.com/v1/gifs/search?api_key=zfPDS04AG6JpUhlHYpRfRgMVLiAx8qz8&q=$_search&limit=25&offset=$_offset&rating=G&lang=en");
      }
      return json.decode(response.body);
    }

    @override
    void initState() {
      // TODO: implement initState
      super.initState();
      _getGifs().then((map){
        print(map);
      });
    }

    @override
    Widget build(BuildContext context) {
      return Container();
    }
  }

Parte 2 - Iniciando o Layout

  main.dart

    import 'package:buscador_gifs_app/ui/home_page.dart';
    import 'package:flutter/material.dart';

    void main(){
      runApp(MaterialApp(
        home:HomePage(),
        theme: ThemeData(hintColor: Colors.white, primaryColor: Colors.white),
      ));
    }

  home_page.dart

    import 'dart:convert';
    import 'package:flutter/material.dart';
    import 'package:http/http.dart' as http;
    import 'package:async/async.dart';


    class HomePage extends StatefulWidget {
      @override
      _HomePageState createState() => _HomePageState();
    }

    class _HomePageState extends State<HomePage> {

      String _search;
      int _offset = 0;

     Future<Map> _getGifs() async{
        http.Response response;

        if(_search == null){
          response = await http.get("https://api.giphy.com/v1/gifs/trending?api_key=zfPDS04AG6JpUhlHYpRfRgMVLiAx8qz8&limit=20&rating=G");
        }else{
          response = await http.get("https://api.giphy.com/v1/gifs/search?api_key=zfPDS04AG6JpUhlHYpRfRgMVLiAx8qz8&q=$_search&limit=25&offset=$_offset&rating=G&lang=en");
        }
        return json.decode(response.body);
      }

      @override
      void initState() {
        // TODO: implement initState
        super.initState();
        _getGifs().then((map){
          print(map);
        });
      }

      @override
      Widget build(BuildContext context) {
        return Scaffold(
          appBar: AppBar(
            backgroundColor: Colors.black,
            title: Image.network("https://developers.giphy.com/branch/master/static/header-logo-8974b8ae658f704a5b48a2d039b8ad93.gif"),
            centerTitle: true,
          ),//AppBar
          backgroundColor: Colors.black,
          body: Column(
            children: <Widget>[
              Padding(
                padding: EdgeInsets.all(10.0),
                child: TextField(
                    style: TextStyle(color: Colors.white, fontSize: 18.0),
                    textAlign: TextAlign.center,
                    decoration: InputDecoration(
                        labelText: "Pesquise aqui",
                        labelStyle: TextStyle(color: Colors.white),
                        border: OutlineInputBorder()
                    )//InputDecoration
                ),//TextField,
              ), //Padding
            ],//<widget>[]
          ),//Column
        );//Scaffold
      }
    }

Parte 3 - Criando um Indicador de Progresso

  import 'dart:convert';

  import 'package:flutter/material.dart';
  import 'package:http/http.dart' as http;
  import 'package:async/async.dart';


  class HomePage extends StatefulWidget {
    @override
    _HomePageState createState() => _HomePageState();
  }

  class _HomePageState extends State<HomePage> {

    String _search;
    int _offset = 0;

   Future<Map> _getGifs() async{
      http.Response response;

      if(_search == null){
        response = await http.get("https://api.giphy.com/v1/gifs/trending?api_key=zfPDS04AG6JpUhlHYpRfRgMVLiAx8qz8&limit=20&rating=G");
      }else{
        response = await http.get("https://api.giphy.com/v1/gifs/search?api_key=zfPDS04AG6JpUhlHYpRfRgMVLiAx8qz8&q=$_search&limit=25&offset=$_offset&rating=G&lang=en");
      }
      return json.decode(response.body);
    }

    @override
    void initState() {
      // TODO: implement initState
      super.initState();
      _getGifs().then((map){
        print(map);
      });
    }

    @override
    Widget build(BuildContext context) {
      return Scaffold(
        appBar: AppBar(
          backgroundColor: Colors.black,
          title: Image.network("https://developers.giphy.com/branch/master/static/header-logo-8974b8ae658f704a5b48a2d039b8ad93.gif"),
          centerTitle: true,
        ),//AppBar
        backgroundColor: Colors.black,
        body: Column(
          children: <Widget>[
            Padding(
              padding: EdgeInsets.all(10.0),
              child: TextField(
                  style: TextStyle(color: Colors.white, fontSize: 18.0),
                  textAlign: TextAlign.center,
                  decoration: InputDecoration(
                      labelText: "Pesquise aqui",
                      labelStyle: TextStyle(color: Colors.white),
                      border: OutlineInputBorder()
                  )//InputDecoration
              ),//TextField,
            ), //Padding
            Expanded(
              child: FutureBuilder(
                future: _getGifs(),
                builder: (context, snapshot){
                  switch(snapshot.connectionState){
                    case ConnectionState.waiting:
                    case ConnectionState.none:
                      return Container(
                        width: 200.0,
                        height: 200.0,
                        alignment: Alignment.center,
                        child: CircularProgressIndicator(
                          valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                          strokeWidth: 5.0,
                        ), //CircularProgressIndicator
                      );  //Container
                      break;
                    default:
                      if(snapshot.hasError){
                        return Container();
                      }else{
                        return _createGifTableContext(context, snapshot);
                      }
                  }
                },
              ),//FutureBuilder
            ),//Expanded
          ],//<widget>[]
        ),//Column
      );//Scaffold
    }

    Widget _createGifTableContext(BuildContext context, AsyncSnapshot snapshot){

    }
  }

Parte 4 - Grid de Gifs

  import 'dart:convert';

  import 'package:flutter/material.dart';
  import 'package:http/http.dart' as http;
  import 'package:async/async.dart';


  class HomePage extends StatefulWidget {
    @override
    _HomePageState createState() => _HomePageState();
  }

  class _HomePageState extends State<HomePage> {

    String _search;
    int _offset = 0;

   Future<Map> _getGifs() async{
      http.Response response;

      if(_search == null){
        response = await http.get("https://api.giphy.com/v1/gifs/trending?api_key=zfPDS04AG6JpUhlHYpRfRgMVLiAx8qz8&limit=20&rating=G");
      }else{
        response = await http.get("https://api.giphy.com/v1/gifs/search?api_key=zfPDS04AG6JpUhlHYpRfRgMVLiAx8qz8&q=$_search&limit=25&offset=$_offset&rating=G&lang=en");
      }
      return json.decode(response.body);
    }

    @override
    void initState() {
      // TODO: implement initState
      super.initState();
      _getGifs().then((map){
        print(map);
      });
    }

    @override
    Widget build(BuildContext context) {
      return Scaffold(
        appBar: AppBar(
          backgroundColor: Colors.black,
          title: Image.network("https://developers.giphy.com/branch/master/static/header-logo-8974b8ae658f704a5b48a2d039b8ad93.gif"),
          centerTitle: true,
        ),//AppBar
        backgroundColor: Colors.black,
        body: Column(
          children: <Widget>[
            Padding(
              padding: EdgeInsets.all(10.0),
              child: TextField(
                  style: TextStyle(color: Colors.white, fontSize: 18.0),
                  textAlign: TextAlign.center,
                  decoration: InputDecoration(
                      labelText: "Pesquise aqui",
                      labelStyle: TextStyle(color: Colors.white),
                      border: OutlineInputBorder()
                  ),//InputDecoration
                onSubmitted: (text){
                    setState(() {
                      _search = text;
                    });
                },
              ),//TextField,
            ), //Padding
            Expanded(
              child: FutureBuilder(
                future: _getGifs(),
                builder: (context, snapshot){
                  switch(snapshot.connectionState){
                    case ConnectionState.waiting:
                    case ConnectionState.none:
                      return Container(
                        width: 200.0,
                        height: 200.0,
                        alignment: Alignment.center,
                        child: CircularProgressIndicator(
                          valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                          strokeWidth: 5.0,
                        ), //CircularProgressIndicator
                      );  //Container
                      break;
                    default:
                      if(snapshot.hasError){
                        return Container();
                      }else{
                        return _createGifTableContext(context, snapshot);
                      }
                  }
                },
              ),//FutureBuilder
            ),//Expanded
          ],//<widget>[]
        ),//Column
      );//Scaffold
    }

    Widget _createGifTableContext(BuildContext context, AsyncSnapshot snapshot){
      return GridView.builder(
        padding: EdgeInsets.all(10.0),
        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: 2,
            mainAxisSpacing: 10.0,
            crossAxisSpacing: 10.0,
        ), //SliverGridDelegateWithFixedCrossAxisCount
        itemCount: snapshot.data["data"].length,
        itemBuilder: (context, index){
          return GestureDetector(
            child: Image.network(snapshot.data["data"][index]["images"]["fixed_height"]["url"],
              height: 300.0,
            fit: BoxFit.cover,),
          );
        },
      );
    }
  }

Parte 5 - Carregando mais Gifs


  import 'dart:convert';

  import 'package:flutter/material.dart';
  import 'package:http/http.dart' as http;
  import 'package:async/async.dart';


  class HomePage extends StatefulWidget {
    @override
    _HomePageState createState() => _HomePageState();
  }

  class _HomePageState extends State<HomePage> {

    String _search;
    int _offset = 0;

   Future<Map> _getGifs() async{
      http.Response response;

      if(_search == null){
        response = await http.get("https://api.giphy.com/v1/gifs/trending?api_key=zfPDS04AG6JpUhlHYpRfRgMVLiAx8qz8&limit=20&rating=G");
      }else{
        response = await http.get("https://api.giphy.com/v1/gifs/search?api_key=zfPDS04AG6JpUhlHYpRfRgMVLiAx8qz8&q=$_search&limit=19&offset=$_offset&rating=G&lang=en");
      }
      return json.decode(response.body);
    }

    @override
    void initState() {
      // TODO: implement initState
      super.initState();
      _getGifs().then((map){
        print(map);
      });
    }

    @override
    Widget build(BuildContext context) {
      return Scaffold(
        appBar: AppBar(
          backgroundColor: Colors.black,
          title: Image.network("https://developers.giphy.com/branch/master/static/header-logo-8974b8ae658f704a5b48a2d039b8ad93.gif"),
          centerTitle: true,
        ),//AppBar
        backgroundColor: Colors.black,
        body: Column(
          children: <Widget>[
            Padding(
              padding: EdgeInsets.all(10.0),
              child: TextField(
                  style: TextStyle(color: Colors.white, fontSize: 18.0),
                  textAlign: TextAlign.center,
                  decoration: InputDecoration(
                      labelText: "Pesquise aqui",
                      labelStyle: TextStyle(color: Colors.white),
                      border: OutlineInputBorder()
                  ),//InputDecoration
                onSubmitted: (text){
                    setState(() {
                      _search = text;
                    });
                },
              ),//TextField,
            ), //Padding
            Expanded(
              child: FutureBuilder(
                future: _getGifs(),
                builder: (context, snapshot){
                  switch(snapshot.connectionState){
                    case ConnectionState.waiting:
                    case ConnectionState.none:
                      return Container(
                        width: 200.0,
                        height: 200.0,
                        alignment: Alignment.center,
                        child: CircularProgressIndicator(
                          valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                          strokeWidth: 5.0,
                        ), //CircularProgressIndicator
                      );  //Container
                      break;
                    default:
                      if(snapshot.hasError){
                        return Container();
                      }else{
                        return _createGifTableContext(context, snapshot);
                      }
                  }
                },
              ),//FutureBuilder
            ),//Expanded
          ],//<widget>[]
        ),//Column
      );//Scaffold
    }

    int _getCount(List data){
      if(_search == null){
        return data.length;
      }else{
        return data.length+1;
      }
    }

    Widget _createGifTableContext(BuildContext context, AsyncSnapshot snapshot){
      return GridView.builder(
        padding: EdgeInsets.all(10.0),
        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: 2,
            mainAxisSpacing: 10.0,
            crossAxisSpacing: 10.0,
        ), //SliverGridDelegateWithFixedCrossAxisCount
        itemCount: _getCount(snapshot.data["data"]),
        itemBuilder: (context, index){
          if(_search == null || index < snapshot.data["data"].length){
            return GestureDetector(
              child: Image.network(snapshot.data["data"][index]["images"]["fixed_height"]["url"],
                height: 300.0,
                fit: BoxFit.cover,),
            );
          }else{
            return Container(
              child: GestureDetector(
                child: Column(
                  children: <Widget>[
                    Icon(Icons.add, color: Colors.white, size: 70.0,),
                    Text("Carregar mais ...", style: TextStyle(color: Colors.white, fontSize: 22.0),)
                  ],
                ),
              ),
            );
          }
        },
      );
    }
  }

Parte 6 - Criando e trocando de Tela

Parte 7 - Compartilhando Gifs

Parte 8 - Imagens Suaves

Parte 9 - Search Vazio


