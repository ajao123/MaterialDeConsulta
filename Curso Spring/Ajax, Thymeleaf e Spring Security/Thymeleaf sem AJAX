
Projeto abordado : cursoUdemyRest


	1 - Interação Thymeleaf

		Regras: 

			1 - Qualquer valores presente como paramêtro será retornado caso o retorno da função seja uma String que seja o caminho de uma página.
				Essa regra não vale para ModelMap model, ModelAndView e Redirect.
				Em outra palavras, caso o retorno seja o caminho de uma página, os paramêtros podem servir tanto para receber valores quanto para enviar valores.

			2 - ModelAndView e ModelMap retornam valores por nome de acordo com os valores presentes em: ( th:object, th:text, th:each ...)

			3 - Caso seja retornado por paramêtro em vez do ModelAndView, o th:object tem que ter o nome referente a classe.

			4 - Como padrão em formulário, sempre coloque o nome do formulario referente a sua classe, para evitar possíveis problemas.

			5-  Redirect: Redireciona atributos para outra função. Na função abaixo, recebe uma entidade Funcionario, BindingResult representa a validação dos atributos da entidade Funcionario e RedirectAttributes attr representa os atributos que irão ser redirecionados. SÓ SÃO ENVIADOS PARA A FUNÇÃO OS VALORES NO REDIRECT, OU SEJA, OS VALORES PRESENTES COMO PARAMÊTROS NÃO SÃO ENVIADOS.


	WebControllers:

		1 - Encaminhando para uma página

			HomeController:

				@GetMapping("/")
				public String home() {
						return "home";
				}

		2 - Encaminhando para a tela de Cadastro de cargo:

			Enviamos um paramêtro cargo, vazio, pois na página html, teremos um objeto cargo alocado ao form.

			O que está presente nos paramêtros da função sempre é enviado para a página html, com excessão de redirect. No redirect só é enviado para a página o que for colocado como addFlashAttribute, todos os outros paramêtros não são enviados novamente para a página html.

			CargoController:

				@GetMapping("/cadastrar")
				public String cadastrar(Cargo cargo) {
					return "cargo/cadastro";
				} 


				//Para a classe salvar, temos o paramêtro cargo, que er	
				@PostMapping("/salvar")
				public String salvar(@Valid Cargo entity, BindingResult result, RedirectAttributes attr) {
						
					if(result.hasErrors()) 
						return "cargo/cadastro";
					
					
					service.insert(entity);
					attr.addFlashAttribute("success", "Cargo inserido com sucesso.");
					return "redirect:/cargos/cadastrar";
				}

			Cadastro - Html: 

				<form th:action="${cargo.id == null} ? @{/cargos/salvar} : @{/cargos/editar}" 
		        	th:object="${cargo}" method="POST">
		        	  
		        	  
		            <div class="form-row">
		                <div class="form-group col-md-6">
		                    <label for="nome" th:text="#{tabela.cargo.col.nome}"></label>
		                    <input type="text" class="form-control" id="nome" placeholder="Nome do cargo" 
		                    	   autofocus="autofocus" th:field="*{nome}"
		                    	   th:classappend="${#fields.hasErrors('nome')} ? 'is-invalid'"/>
		                    	   
		                   	<div class="invalid-feedback">
								<span th:errors="*{nome}"></span>
		                	</div>
		                </div>
		                <div class="form-group col-md-4">
		                    <label for="departamento" th:text="#{tabela.cargo.col.departamento}"></label>
		                    <select id="departamento" class="form-control" th:field="*{departamento}"
		                    		th:classappend="${#fields.hasErrors('departamento')} ? 'is-invalid'">
		                        <option value="">Selecione</option>
		                        <option th:each="d : ${departamentos}"
		                        		th:value="${d.id}" th:text="${d.nome}"></option>
		                    </select>
		                    <div class="invalid-feedback">
		                    	<span th:errors="*{departamento}"></span>
		                    </div>
		                </div>
		            </div>
		            <input type="hidden" id="id" th:field="*{id}"/>
		            <button type="submit" class="btn btn-primary btn-sm">Salvar</button>
		        
		        </form>

		3 - Listar Cargos

			Cargo Controller: 

				//Retorna uma lista de cargos, essa lista é adicionada no ModelMap recebido como paramêtro. 

				@GetMapping("/listar")
				public String listar(ModelMap model) {
					model.addAttribute("cargos", service.getAll());
					return "cargo/lista";
				}

			Lista - Html:	

				<table class="table table-striped table-hover table-sm">
		            <thead>
		            <tr>
		                <th>#</th>
		                <th>Cargo</th>
		                <th>Departamento</th>
		                <th>Ação</th>
		            </tr>
		            </thead>
		            <tbody>
		            <tr th:each="cargo : ${cargos}">
		                <td th:text="${cargo.id}"></td>
		                <td th:text="${cargo.nome}"></td>
		                <td th:text="${cargo.departamento.nome}"></td>
		                <td colspan="2">
		                    <a class="btn btn-info btn-sm" th:href="@{/cargos/editar/{id} (id=${cargo.id})}" role="button">
		                        <span class="oi oi-brush" title="Editar" aria-hidden="true"></span>
		                    </a>
		                    <button th:id="${'btn_cargos/excluir/' + cargo.id}" type="button" class="btn btn-danger btn-sm"
		                    		data-toggle="modal" data-target="#myModal">
		                        <span class="oi oi-circle-x" title="Exclusão desabilitada" aria-hidden="true"></span>
		                    </button>
		                </td>
		            </tr>
		            </tbody>
		        </table>

		4 - Retornando um atributo

			CargoController: 

				@ModelAttribute("departamentos")
				public List<Departamento> listaDeDepartamentos(){
					return departamentoService.getAll();
				}

			Cadastro - Html: 

				<div class="form-group col-md-4">
		            <label for="departamento" th:text="#{tabela.cargo.col.departamento}"></label>
		            <select id="departamento" class="form-control" th:field="*{departamento}"
		            		th:classappend="${#fields.hasErrors('departamento')} ? 'is-invalid'">
		                <option value="">Selecione</option>
		                <option th:each="d : ${departamentos}"                       // <- Esta linha
		                		th:value="${d.id}" th:text="${d.nome}"></option>
		            </select>
		            <div class="invalid-feedback">
		            	<span th:errors="*{departamento}"></span>
		            </div>
		        </div>

		5 - Editar cargo

			CargoController:

				//Recebe o id do cargo a ser alterado, vindo da ListarCadastro. Envia para a página Cadastro o cargo a ser editado com todos os seus atributos atuais, incluindo o id.

				@GetMapping("/editar/{id}")
				public String preEditar(@PathVariable("id") Long id, ModelMap model) {
					model.addAttribute("cargo", service.findById(id));
					return "cargo/cadastro";
				}
				
				@PostMapping("/editar")
				public String editar(@Valid Cargo entity, BindingResult result, RedirectAttributes attr) {

					if(result.hasErrors()) 
						return "cargo/cadastro";
					
					service.update(entity, entity.getId());
					attr.addFlashAttribute("success", "Cargo atualizado com sucesso.");
					return "redirect:/cargos/cadastrar";
				} 

			Cadastro - Html

				Essa página será usada tanto para cadastro quanto para edição de cargos. Ao clicar no botão salvar, como é constatado que o id do cargo não é nulo, a requisição é enviada para a função editar presente na classe CargoController

				<div class="container" id="cadastro">
		        
		        	<div th:replace="fragments/alert"></div>

		        	// verifica se o id do cargo é nulo, caso seja nulo, o usuário deseja salvar, caso contrário o usuário deseja fazer uma edição
		            
		            <form th:action="${cargo.id == null} ? @{/cargos/salvar} : @{/cargos/editar}" 
		            	  th:object="${cargo}" method="POST">
		            	  
		            	  
		                <div class="form-row">
		                    <div class="form-group col-md-6">
		                        <label for="nome" th:text="#{tabela.cargo.col.nome}"></label>
		                        <input type="text" class="form-control" id="nome" placeholder="Nome do cargo" 
		                        	   autofocus="autofocus" th:field="*{nome}"
		                        	   th:classappend="${#fields.hasErrors('nome')} ? 'is-invalid'"/>
		                        	   
		                       	<div class="invalid-feedback">
									<span th:errors="*{nome}"></span>
		                    	</div>
		                    </div>
		                    <div class="form-group col-md-4">
		                        <label for="departamento" th:text="#{tabela.cargo.col.departamento}"></label>
		                        <select id="departamento" class="form-control" th:field="*{departamento}"
		                        		th:classappend="${#fields.hasErrors('departamento')} ? 'is-invalid'">
		                            <option value="">Selecione</option>
		                            <option th:each="d : ${departamentos}"
		                            		th:value="${d.id}" th:text="${d.nome}"></option>
		                        </select>
		                        <div class="invalid-feedback">
		                        	<span th:errors="*{departamento}"></span>
		                        </div>
		                    </div>
		                </div>

		                //Aqui fica o ID do usuário que será recebido e enviado para a ferramenta de edição caso não esteja nulo.

		                <input type="hidden" id="id" th:field="*{id}"/>
		                

		                <button type="submit" class="btn btn-primary btn-sm">Salvar</button> 
		            </form>

		        </div>

		    Listar - Html

		    	  <div class="container" id="listagem">
		        	
			        	<div th:replace="fragments/alert"></div>
			        
			            <div class="table-responsive">
			                <table class="table table-striped table-hover table-sm">
			                    <thead>
			                    <tr>
			                        <th>#</th>
			                        <th>Cargo</th>
			                        <th>Departamento</th>
			                        <th>Ação</th>
			                    </tr>
			                    </thead>
			                    <tbody>
			                    <tr th:each="cargo : ${cargos}">
			                        <td th:text="${cargo.id}"></td>
			                        <td th:text="${cargo.nome}"></td>
			                        <td th:text="${cargo.departamento.nome}"></td>
			                        <td colspan="2">

			                        	//Aqui temos o botão de editar, ele enviará o valor contido em cargo.id, na respectiva linha, para a função
			                        	preEditar, no CargoController.

			                            <a class="btn btn-info btn-sm" th:href="@{/cargos/editar/{id} (id=${cargo.id})}" role="button">
			                                <span class="oi oi-brush" title="Editar" aria-hidden="true"></span>
			                            </a>
			                            <button th:id="${'btn_cargos/excluir/' + cargo.id}" type="button" class="btn btn-danger btn-sm"
			                            		data-toggle="modal" data-target="#myModal">
			                                <span class="oi oi-circle-x" title="Exclusão desabilitada" aria-hidden="true"></span>
			                            </button>
			                        </td>
			                    </tr>
			                    </tbody>
			                </table>
			            </div>
			        </div>

		6 - Excluir um atributo

			CargoController: 

				// Recebe o id do cargo a ser excluidom exclui o valor e retorna para a função listar.
				// Ps: Poderíamos retornar direto para a pagina listar, no entanto seria necessário adicionar os cargos no model, assim como é feito na função listar.
				// Ps: Redirect e ModelMap são 2 formas parecidas de trabalhar com valores, poderíamos também utilizar o Redirect.
				
				//Ficaria assim:

			// **************************************************************************************************************
					@GetMapping("/excluir/{id}")
					public String excluir(@PathVariable("id") Long id, RedirectAttributes attr) {
						
						if(service.findById(id).getFuncionarios().isEmpty()) {
							service.delete(id);
							attr.addFlashAttribute("success", "Cargo removido com sucesso.");
						}else {
							attr.addFlashAttribute("fail", "Cargo não removido. Possui funcionario(s) vinculado(s).");
						}	
						return "redirect:/cargos/listar";
					}
			// **************************************************************************************************************

					@GetMapping("/excluir/{id}")
					public String excluir(@PathVariable("id") Long id, ModelMap model) {
						
						if(service.findById(id).getFuncionarios().isEmpty()) {
							service.delete(id);
							model.addAttribute("success", "Cargo removido com sucesso.");
						}else {
							model.addAttribute("fail", "Cargo não removido. Possui funcionario(s) vinculado(s).");
						}	
						return listar(model);
					}
				
				Listar - Html:

					<div class="container" id="listagem">
			        	<div th:replace="fragments/alert"></div>
			        
			            <div class="table-responsive">
			                <table class="table table-striped table-hover table-sm">
			                    <thead>
			                    <tr>
			                        <th>#</th>
			                        <th>Cargo</th>
			                        <th>Departamento</th>
			                        <th>Ação</th>
			                    </tr>
			                    </thead>
			                    <tbody>
			                    <tr th:each="cargo : ${cargos}">
			                        <td th:text="${cargo.id}"></td>
			                        <td th:text="${cargo.nome}"></td>
			                        <td th:text="${cargo.departamento.nome}"></td>
			                        <td colspan="2">
			                            <a class="btn btn-info btn-sm" th:href="@{/cargos/editar/{id} (id=${cargo.id})}" role="button">
			                                <span class="oi oi-brush" title="Editar" aria-hidden="true"></span>
			                            </a>

			                            // Quando este botão é pressionado, uma função é acionada no JavaScript presente na página html, onde a url que a página irá é difinido.
			                            // É assionado também um modal para definir se o usuário realmente deseja realizar a operação de exclusão.

			                            <button th:id="${'btn_cargos/excluir/' + cargo.id}" type="button" class="btn btn-danger btn-sm"
			                            		data-toggle="modal" data-target="#myModal">
			                                <span class="oi oi-circle-x" title="Exclusão Habilitada" aria-hidden="true"></span>
			                            </button>
			                        </td>
			                    </tr>
			                    </tbody>
			                </table>
			            </div>
			        </div>

			    Modal - Html

			    	//Caso o usuário aperte em confirmar, o JS captará o click do botão ok_confirm e levará o usuário à url definida anteriormente.

				    <div class="modal fade" tabindex="-1" role="dialog" id="myModal" th:fragment="modal">
					  <div class="modal-dialog" role="document">
					    <div class="modal-content">
					      <div class="modal-header">
					        <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
					        <h4 class="modal-title">Atenção</h4>
					      </div>
					      <div class="modal-body">
					        <p>Clique em Ok para concluir a exclusão.&hellip;</p>
					      </div>
					      <div class="modal-footer">
					        <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
					        <button id="ok_confirm" type="button" class="btn btn-primary">Ok</button>
					      </div>
					    </div>
					  </div>
					</div>


			    Layout - Html

						<script type="text/javascript">
						    
							//PARTE IMPORTANTE

							var url = '';
							//toda vez que o botão for pressionado
							//divide o nome do botão ex: btn_departamentos/excluir/' + departamento.id em btn_ e (departamentos/excluir/' + departamento.id)
							$('button[id*="btn_"]').click(function(){
								url = "http://localhost:8080/" + $(this).attr('id').split("_")[1];
							});
							// Busca nas paginas html, um botão com esse id e, quando ele é pressionado, o usuario é levado para a url
							$('#ok_confirm').click(function(){
								document.location.href = url;
							});
							
							$(function() {
								$('[data-toggle="popover"]').popover();
							});
							
							$(document).ready(function(){
							    $(".navbar-toggle").click(function(){
							        $(".sidebar").toggleClass("sidebar-open");
							    })
							});

						</script>
				
		7 - Utilizando RequestParam(Classe Funcionario)

			FuncionarioController: 

				//Retornar valores por meio de paramêtros. Diferente do @PathVariable, o valor não vem presente na URL e, diferente dos métodos
				de cadastro, o valor não vem alocado a um objeto. Logo se faz necessário o uso do @RequestParam

				//Diante disso, temos 3 métodos de retorno de valores, @PathVariable, @RequestParam e Formulários(th:object)

				@GetMapping("/buscar/nome")
				public String getFuncionariosByNome(@RequestParam("nome") String nome, ModelMap model) {
					model.addAttribute("funcionarios", service.getByName(nome));
					return "funcionario/lista";
				}
				
				@GetMapping("/buscar/cargo")
				public String getFuncionariosByCargo(@RequestParam("id") Long id, ModelMap model) {
					model.addAttribute("funcionarios", service.getByCargo(id));
					return "funcionario/lista";
				}

				@GetMapping("/buscar/data")
				public String getPorDatas(@RequestParam("entrada") @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate entrada, 
										  @RequestParam("saida") @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate saida, 
						ModelMap model) {
					model.addAttribute("funcionarios", service.getForDates(entrada, saida));
					return "funcionario/lista";
				}

			Listar - Html

				    <div class="row">
		                <div class="col">
		                    <div class="collapse" id="collapseNome">

		                        <nav class="navbar navbar-light bg-light">
		                            <form class="form-inline" method="GET" th:action="@{/funcionarios/buscar/nome}">
		                                <input class="form-control mr-sm-2" type="search" placeholder="nome" aria-label="Search"
		                                       th:name="nome" />
		                                <button class="btn btn-outline-success my-2 my-sm-0">Search</button>
		                            </form>
		                        </nav>

		                    </div>
		                </div>
		            </div>
		            <div class="row">
		                <div class="col">
		                    <div class="collapse" id="collapseCargo">

		                        <nav class="navbar navbar-light bg-light">
		                            <form class="form-inline" method="GET" th:action="@{/funcionarios/buscar/cargo}">
		                                <select class="form-control mr-sm-2" th:name="id" aria-label="Search">
		                                    <option value="">Cargo</option>
		                                    <option th:each="cargo : ${cargos}"
		                                    		th:value="${cargo.id}" th:text="${cargo.nome}"></option>
		                                </select>
		                                <button class="btn btn-outline-success my-2 my-sm-0">Search</button>
		                            </form>
		                        </nav>

		                    </div>
		                </div>
		            </div>
		            <div class="row">
		                <div class="col">
		                    <div class="collapse" id="collapseData">

		                        <nav class="navbar navbar-light bg-light">
		                            <form class="form-inline" method="GET" th:action="@{/funcionarios/buscar/data}">
		                                <input class="form-control mr-sm-2" type="date" aria-label="Search"
		                                       th:name="entrada" />
		                                <input class="form-control mr-sm-2" type="date" aria-label="Search"
		                                       th:name="saida" />
		                                <button class="btn btn-outline-success my-2 my-sm-0">Search</button>
		                            </form>
		                        </nav>

		                    </div>
		                </div>
		            </div>

		Ps: As demais classes seguem o mesmo protótipo.

	Tratamento de erro:

		FuncionarioValidator: 

			public class FuncionarioValidator implements Validator{

				FuncionarioService service;
				
				public FuncionarioValidator(FuncionarioService service) {
					this.service = service;	
				}
				
				@Override
				public boolean supports(Class<?> clazz) {
					return Funcionario.class.equals(clazz);
				}

				@Override
				public void validate(Object object, Errors errors) {
					Funcionario entity = (Funcionario) object;
					
					if(entity.getId() == null) {
						if(service.existByName(entity.getNome()) != 0) {      
							errors.rejectValue("nome", "Existe.nome");
						}	
					}else {
						if(service.existByName(entity.getNome(), entity.getId()) != 0) {    
							errors.rejectValue("nome", "Existe.nome");
						}
					}
					
					if(entity.getDataSaida() != null) {
						if(entity.getDataSaida().isBefore(entity.getDataEntrada())) {
							errors.rejectValue("dataSaida", "PosteriorDataEntrada.funcionario.dataSaida");
						}
					}
					
				}

			}

		FuncionarioController: 

			@Autowired
			FuncionarioService service;
			
			@InitBinder
			public void initBinder(WebDataBinder binder) {
				binder.addValidators(new FuncionarioValidator(service));
			}
		
	Página de erro:

		Classe ErrorView:

			@Component
			public class MyErrorView implements ErrorViewResolver{

				@Override
				public ModelAndView resolveErrorView(HttpServletRequest request, HttpStatus status, Map<String, Object> map) {
					
					ModelAndView model = new ModelAndView("error");
					model.addObject("status", status.value());
					
					switch(status.value()) {
					
						case 404:
							model.addObject("error", "Página não encontrada.");
							model.addObject("message", "A url para a página '" + map.get("path") + "' não existe.");
							break;
							
						case 500:
							model.addObject("error", "Ocorreu um erro interno no servidor.");
							model.addObject("message", "Ocorreu um erro inesperado, tente mais tarde.");
							break;
							
						default:
							model.addObject("error", map.get("error"));
							model.addObject("message", map.get("message"));
							break;
					}
					
					return model;
				}

			}

		Error - Html:

			<!DOCTYPE html>
			<html lang="pt" 
				xmlns="http://www.w3.org/1999/xhtml"
				xmlns:th="http://www.thymeleaf.org">
			<head>
			<meta charset="UTF-8" />
			<meta http-equiv="X-UA-Compatible" content="IE=edge" />
			<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
			<meta name="description" content="" />
			<meta name="author" content="" />
			<link rel="icon" href="/image/favicon.png" />

			<title th:text="${status}"></title>

			<!-- Bootstrap core CSS -->
			<link href="/webjars/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
			<link href="/webjars/open-iconic/font/css/open-iconic-bootstrap.min.css" rel="stylesheet" />
			<!-- Custom styles for this template -->
			<link href="/css/style.css" rel="stylesheet" />
			</head>		
			<body class="text-center">
				<div>
					<h1 class="h3 mb-3 font-weight-normal">
						<i class="oi oi-warning"></i> 
						<span th:text="${status}"></span>
					</h1>
								// Erro especificado na classe ErrorView
					<h2 th:text="${error}"></h2>
					
					<div>
								// Mensagem especificada na classe ErrorView
						<span th:text="${message}"></span><br/><br/>
						<a class="btn btn-primary" type="button" href="javascript:history.back()">Voltar a página anterior</a>
					</div>
				</div>
			</body>
			</html>	

	Integração de backend e frontend

		Páginas Html 

			Layout:

				<!DOCTYPE html>
				<html lang="pt" xmlns="http://www.w3.org/1999/xhtml"
					xmlns:th="http://www.thymeleaf.org"
					xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout">
				<head>
					<title>Spring-Boot Básico</title>
					<meta charset="UTF-8" />
					<meta http-equiv="X-UA-Compatible" content="IE=edge" />
					<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
					<meta name="description" content="" />
					<meta name="author" content="" />
					<link rel="icon" href="/image/favicon.png" />

					<!-- Bootstrap core CSS -->
					<link href="/webjars/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
					<link href="/webjars/open-iconic/font/css/open-iconic-bootstrap.min.css" rel="stylesheet" />
					
					<!-- Custom styles for this template -->
					<link href="/css/style.css" rel="stylesheet" />
				</head>
				<body>

					//Substitui esse header pelo header : cabecalho presente na página Header dentro da pasta fragments

					<header th:replace="fragments/header :: cabecalho">
						<div>header</div>
					</header>

					<div class="layout-main">
						<aside>

					//Substitui esse nav pelo nav : nav-sidebar presente na página Sidebar dentro da pasta fragments

							<nav th:replace="fragments/sidebar :: nav-sidebar">
								
							</nav>
						</aside>
						
					// Esse layout será padrão para todas as páginas do sistema. Note que não estou usando th:fragment e sim layout:fragment. Logo as demais páginas vão usar esse layout como padrão.  O corpo da página será trazido para cá, e essa será a página oficial. Isso procede para todas as páginas do sistema.

						<section layout:fragment="corpo">
							<div>conteudo principal das paginas</div>
						</section>


					</div>
					<footer th:replace="fragments/footer :: rodape">
						<div>footer</div>
					</footer>
					<!-- Bootstrap core JavaScript
				    ================================================== -->
					<!-- Placed at the end of the document so the pages load faster -->
					<script src="/webjars/jquery/jquery.min.js"></script>
					<script src="/webjars/jquery-mask-plugin/dist/jquery.mask.min.js"></script>
					<script	src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
					<script src="/webjars/bootstrap/js/bootstrap.min.js"></script>
					<script type="text/javascript">
					    
						var url = '';
						//toda vez que o botão for pressionado
						//divide o nome do botão ex: btn_departamentos/excluir/' + departamento.id em btn_ e (departamentos/excluir/' + departamento.id)
						$('button[id*="btn_"]').click(function(){
							url = "http://localhost:8080/" + $(this).attr('id').split("_")[1];
						});
						// Busca nas paginas html, um botão com esse id e, quando ele é pressionado, o usuario é levado para a url
						$('#ok_confirm').click(function(){
							document.location.href = url;
						});
						
						$(function() {
							$('[data-toggle="popover"]').popover();
						});
						
						$(document).ready(function(){
						    $(".navbar-toggle").click(function(){
						        $(".sidebar").toggleClass("sidebar-open");
						    })
						});

					</script>
				</body>
				</html>


			Cadastro:

				**********************************************************************************************************************************************

				Departamento:

					Página Departamento:

						<!DOCTYPE html>

						// Aqui importamos todo layout

						<html layout:decorate="~{layout}">
						<head><meta charset="UTF-8"/></head>

						<body>
							
						// O corpo do layout é substituído pelo fragmento abaixo: 

						    <section class="layout-content" layout:fragment="corpo">

						        <nav class="navbar navbar-expand-md bg-light">
						            <div class="collapse navbar-collapse" id="navbarsExampleDefault">
						                <ul class="navbar-nav mr-auto">
						                    <li class="nav-item active">
						                        <i class="oi oi-caret-right"></i>
						                        <span>Cadastrar Departamentos</span>
						                    </li>
						                </ul>
						                <a class="btn btn-primary btn-md" th:href="@{/departamentos/listar}" role="button">
						                    <span class="oi oi-spreadsheet" title="Listar" aria-hidden="true"></span>
						                    <span>Listar Departamentos</span>
						                </a>
						            </div>
						        </nav>

						        <div class="container" id="cadastro">
						        
						        	// Troca esse div pelo página Alert, que contém Alerts(Sucess, Fail)

						        	<div th:replace="fragments/alert"></div>
						        
						            <form th:action=" ${departamento.id == null} ?  @{/departamentos/salvar} : @{/departamentos/editar}" 
						            	  th:object="${departamento}"  method="POST">
						            	              	  
						                <div class="form-row">
						                    <div class="form-group col-md-6">
						                        <label for="nome">Departamento</label>

						                        // Se for retornado erro, a borda é avermelhada.
						                        
						                        <input type="text" class="form-control" id="nome"
						                               placeholder="Nome Departamento" autofocus="autofocus" th:field="*{nome}"
						                               th:classappend="${#fields.hasErrors('nome')} ? 'is-invalid'"/>
						                        
						                        // Coloca a mensagem, relacionada ao "nome", abaixo.

						                        <div class="invalid-feedback">
													<span th:errors="*{nome}"></span>
						                       	</div>  
						                       	 
									   
						                    </div>
						                </div>

						                // Id do Departamento, não aparece para o usuário.
						                
						                <input type="hidden" id="id" th:field="*{id}"/>

						                <button type="submit" class="btn btn-primary btn-sm">Salvar</button>
						            </form>
						        </div>
						    </section>
							
						</body>
						</html>

					Controller Departamento:

						@Controller
						@RequestMapping("/departamentos")
						public class DepartamentoController {

							@Autowired
							DepartamentoService service;
							
							@InitBinder
							public void initBinder(WebDataBinder binder) {
								binder.addValidators(new DepartamentoValidator(service));
							}
							
							@GetMapping("/cadastrar")
							public String cadastrar(Departamento departamento) {
								return "departamento/cadastro";
							}
							
							@PostMapping("/salvar")
							public String salvar(@Valid Departamento entity, BindingResult result, RedirectAttributes attr) {
									
								// Erros que serão adicionados abaixo dos atributos inválidos
								if(result.hasErrors()) 
									return "departamento/cadastro";
								
								service.insert(entity);

								// O Alert Success

								attr.addFlashAttribute("success", "Departamento inserido com sucesso.");	

								return "redirect:/departamentos/cadastrar";
							}
							
							@GetMapping("/listar")
							public String listar(ModelMap model) {
								model.addAttribute("departamentos", service.getAll());
								return "departamento/lista";
							}
							
							@GetMapping("/editar/{id}")
							public String preEditar(@PathVariable("id") Long id, ModelMap model) {
								model.addAttribute("departamento", service.findById(id));
								return "departamento/cadastro";
							}
							
							@PostMapping("/editar")
							public String editar(@Valid Departamento entity, BindingResult result, RedirectAttributes attr) {
								
								if(result.hasErrors()) 
									return "departamento/cadastro";
								
								service.update(entity, entity.getId());
								
								// O Alert Success

								attr.addFlashAttribute("success", "Departamento atualizado com sucesso.");
								return "redirect:/departamentos/cadastrar";
							}
							
							@GetMapping("/excluir/{id}")
							public String excluir(@PathVariable("id") Long id, ModelMap model) {
								
								if(service.findById(id).getCargos().isEmpty()) {
									service.delete(id);

									// O Alert Success

									model.addAttribute("success", "Departamento removido com sucesso.");
								}else {

									// O Alert Fail

									model.addAttribute("fail", "Departamento não removido. Possui cargo(s) vinculado(s).");
								}
								return listar(model);
							}
							
						}


				**********************************************************************************************************************************************

				Cargo:

					Página Cargo:

						<!DOCTYPE html>

						// Aqui importamos todo layout

						<html layout:decorate="~{layout}">
						<head><meta charset="UTF-8"/></head>
						<body>
							
						// O corpo do layout é substituído pelo fragmento abaixo: 

							    <section class="layout-content" layout:fragment="corpo">
							
							        <nav class="navbar navbar-expand-md bg-light">
							            <div class="collapse navbar-collapse" id="navbarsExampleDefault">
							                <ul class="navbar-nav mr-auto">
							                    <li class="nav-item active">
							                        <i class="oi oi-caret-right"></i>
							                        <span th:text="#{section.link.cadastrar.cargo}"></span>
							                    </li>
							                </ul>
							            </div>
							            <a class="btn btn-primary btn-md" th:href="@{/cargos/listar}" role="button">
							                <span class="oi oi-spreadsheet" title="Cadastro" aria-hidden="true"></span>
							                <span th:text="#{section.link.listar.cargo}"></span>
							            </a>
							        </nav>
							
							        <div class="container" id="cadastro">
							        
										// Troca esse div pelo página Alert, que contém Alerts(Sucess, Fail)

							        	<div th:replace="fragments/alert"></div>
							        
							            <form th:action="${cargo.id == null} ? @{/cargos/salvar} : @{/cargos/editar}" 
							            	  th:object="${cargo}" method="POST">
							            	  
							            	  
							                <div class="form-row">
							                    <div class="form-group col-md-6">
							                        <label for="nome" th:text="#{tabela.cargo.col.nome}"></label>
							                        <input type="text" class="form-control" id="nome" placeholder="Nome do cargo" 
							                        	   autofocus="autofocus" th:field="*{nome}"
							                        	   th:classappend="${#fields.hasErrors('nome')} ? 'is-invalid'"/>
							                        	   //Barra vermelha caso haja algum erro relacionado ao atributo  

							                         //Erros relacionados ao atributo(mensagens relacionadas ao nome)  
							                       	<div class="invalid-feedback">
														<span th:errors="*{nome}"></span>
						                        	</div>
							                    </div>
							                    <div class="form-group col-md-4">
							                        <label for="departamento" th:text="#{tabela.cargo.col.departamento}"></label>

							                         //Barra vermelha caso haja algum erro relacionado ao atributo

							                        <select id="departamento" class="form-control" th:field="*{departamento}"
							                        		th:classappend="${#fields.hasErrors('departamento')} ? 'is-invalid'">
							                            <option value="">Selecione</option>
							                            <option th:each="d : ${departamentos}"
							                            		th:value="${d.id}" th:text="${d.nome}"></option>
							                        </select>

							                         //Erros relacionados ao atributo(mensagens relacionadas ao departamento)  

							                        <div class="invalid-feedback">
							                        	<span th:errors="*{departamento}"></span>
							                        </div>
							                    </div>
							                </div>
							                <input type="hidden" id="id" th:field="*{id}"/>
							                <button type="submit" class="btn btn-primary btn-sm">Salvar</button> 
							            </form>
							
							        </div>
							        			
							    </section>

						</body>
						</html>		

					Cargo Controller:

					@Controller
					@RequestMapping("/cargos")
					public class CargoController {

						@Autowired
						CargoService service;
						
						@Autowired
						DepartamentoService departamentoService;
						
						@InitBinder
						public void initBinder(WebDataBinder binder) {
							binder.addValidators(new CargoValidator(service));
						}
						
						@GetMapping("/cadastrar")
						public String cadastrar(Cargo entity) {
							return "cargo/cadastro";
						}
						
						@PostMapping("/salvar")
						public String salvar(@Valid Cargo entity, BindingResult result, RedirectAttributes attr) {
								
							// Erros relacionados aos atributos
							if(result.hasErrors()) 
								return "cargo/cadastro";
							
							
							service.insert(entity);

							// Alerta Sucesso

							attr.addFlashAttribute("success", "Cargo inserido com sucesso.");
							return "redirect:/cargos/cadastrar";
						}
						
						@GetMapping("/listar")
						public String listar(ModelMap model) {
							model.addAttribute("cargos", service.getAll());
							return "cargo/lista";
						}
						
						@ModelAttribute("departamentos")
						public List<Departamento> listaDeDepartamentos(){
							return departamentoService.getAll();
						}
						
						@GetMapping("/editar/{id}")
						public String preEditar(@PathVariable("id") Long id, ModelMap model) {
							model.addAttribute("cargo", service.findById(id));
							return "cargo/cadastro";
						}
						
						@PostMapping("/editar")
						public String editar(@Valid Cargo entity, BindingResult result, RedirectAttributes attr) {

							//Erros relacionados atributos

							if(result.hasErrors()) 
								return "cargo/cadastro";
							
							service.update(entity, entity.getId());
							attr.addFlashAttribute("success", "Cargo atualizado com sucesso.");
							return "redirect:/cargos/cadastrar";
						}
						
						@GetMapping("/excluir/{id}")
						public String excluir(@PathVariable("id") Long id, ModelMap model) {
							
							if(service.findById(id).getFuncionarios().isEmpty()) {
								service.delete(id);

								// Alerta Sucesso

								model.addAttribute("success", "Cargo removido com sucesso.");
							}else {

								// Alerta Fail

								model.addAttribute("fail", "Cargo não removido. Possui funcionario(s) vinculado(s).");
							}	
							return listar(model);
						}
						
					}
				
				**********************************************************************************************************************************************


				**********************************************************************************************************************************************

				Funcionario:

					Página Funcionário:

						<!DOCTYPE html>

						//Puxar Layout
						
						<html layout:decorate="~{layout}">
						<head><meta charset="UTF-8"/></head>
						<body>

							//Joga esse corpo no layout
						
						    <section class="layout-content" layout:fragment="corpo">
						        <div class="page-header">
						            <nav class="navbar navbar-expand-md navbar-top bg-light">
						                <div class="collapse navbar-collapse" id="navbarsExampleDefault">
						                    <ul class="navbar-nav">
						                        <li class="nav-item active">
						                            <i class="oi oi-caret-right"></i>
						                            <span>Cadastrar Funcionários</span>
						                        </li>
						                    </ul>
						                </div>
						                <a class="btn btn-primary btn-md" th:href="@{/funcionarios/listar}" role="button">
						                    <span class="oi oi-spreadsheet" title="Cadastro" aria-hidden="true"></span>
						                    <span>Listar Funcionários</span>
						                </a>
						            </nav>
						        </div>

						        <div class="container" id="cadastro">
						        	
						        	// Alerts: Success e Fail

						        	<div th:replace="fragments/alert"></div>
						        
						            <form th:action="${funcionario.id == null} ? @{/funcionarios/salvar} : @{/funcionarios/editar}" 
						            	  th:object="${funcionario}" method="POST">
						            	  
						                <div class="form-row">
						                    <div class="form-group col-md-6">
						                        <label for="nome">Nome do Funcionário</label>
						                        <input type="text" class="form-control" id="nome" placeholder="Nome Completo"
						                               autofocus="autofocus" th:field="*{nome}"
						                               th:classappend="${#fields.hasErrors('nome')} ? 'is-invalid'"/>
						                        
						                        <div class="invalid-feedback">
													<span th:errors="*{nome}"></span>
						                        </div>
						                    </div>
						                    <div class="form-group col-md-6">
						                        <label for="salario">Salário Bruto</label>
						                        <input type="text" class="form-control" id="salario" data-mask="#.##0,00"
						                               data-mask-reverse="true" th:field="*{salario}"
						                               th:classappend="${#fields.hasErrors('salario')} ? 'is-invalid'"/>
						                        <div class="invalid-feedback">
													<span th:errors="*{salario}"></span>
						                        </div>
						                    </div>
						                </div>
						                <div class="form-row">
						                    <div class="form-group col-md-6">
						                        <label for="dataEntrada">Data de Entrada</label>
						                        <input type="date" class="form-control" id="dataEntrada" th:field="*{dataEntrada}"
						                        th:classappend="${#fields.hasErrors('dataEntrada')} ? 'is-invalid'"/>            
						                        <div class="invalid-feedback">
													<span th:errors="*{dataEntrada}"></span>
						                        </div>
						                    </div>
						                    <div class="form-group col-md-6">
						                        <label for="dataSaida">Data de Saída</label>
						                        <input type="date" class="form-control" id="dataSaida" th:field="*{dataSaida}"
						                        th:classappend="${#fields.hasErrors('dataSaida')} ? 'is-invalid'"/>
						                        <div class="invalid-feedback">
													<span th:errors="*{dataSaida}"></span>
						                        </div>
						                    </div>
						                </div>
						                <div class="form-row">
						                    <div class="form-group col-md-6">
						                        <label for="cargo">Cargo</label>
						                        <select id="cargo" class="form-control" th:field="*{cargo}"
						                        	th:classappend="${#fields.hasErrors('cargo')} ? 'is-invalid'">
						                            <option value="">Selecione...</option>
						                            <option th:each="c : ${cargos}" th:value="${c.id}" th:text="${c.nome}"></option>
						                        </select>
						                        <div class="invalid-feedback">
						                        	<span th:errors="*{cargo}"></span>
						                        </div>
						                    </div>
						                </div>
						                <div class="form-row">
						                    <div class="form-group col-md-6">
						                        <label for="cidade">Cidade</label>
						                        <input type="text" class="form-control" id="cidade" th:field="*{endereco.cidade}"
						                        th:classappend="${#fields.hasErrors('endereco.cidade')} ? 'is-invalid'"/>
						                        <div class="invalid-feedback">
													<span th:errors="*{endereco.cidade}"></span>
						                        </div>
						                    </div>
						                    <div class="form-group col-md-6">
						                        <label for="logradouro">Logradouro</label>
						                        <input type="text" class="form-control" id="logradouro" 
						                        placeholder="logradouro sem número" th:field="*{endereco.logradouro}"
						                        th:classappend="${#fields.hasErrors('endereco.logradouro')} ? 'is-invalid'"/>
						                        <div class="invalid-feedback">
													<span th:errors="*{endereco.logradouro}"></span>
						                        </div>
						                    </div>
						                </div>
						                <div class="form-row">
						                    <div class="form-group col-md-6">
						                        <label for="numero">Número</label>
						                        <input type="text" class="form-control" id="numero" th:field="*{endereco.numero}"
						                        th:classappend="${#fields.hasErrors('endereco.numero')} ? 'is-invalid'"/>
						                        <div class="invalid-feedback">
													<span th:errors="*{endereco.numero}"></span>
						                        </div>
						                    </div>
						                    <div class="form-group col-md-6">
						                        <label for="complemento">Complemento</label>
						                        <input type="text" class="form-control" id="complemento" 
						                        placeholder="fundos, casa, AP. 102, .." th:field="*{endereco.complemento}" 
						                        th:classappend="${#fields.hasErrors('endereco.complemento')} ? 'is-invalid'"/>
						                        <div class="invalid-feedback">
													<span th:errors="*{endereco.complemento}"></span>
						                        </div>
						                    </div>
						                </div>
						                <div class="form-row">
						                    <div class="form-group col-md-6">
						                        <label for="bairro">Bairro</label>
						                        <input type="text" class="form-control" id="bairro" th:field="*{endereco.bairro}"
						                        th:classappend="${#fields.hasErrors('endereco.bairro')} ? 'is-invalid'"/>
						                        <div class="invalid-feedback">
													<span th:errors="*{endereco.bairro}"></span>
						                        </div>
						                    </div>
						                    <div class="form-group col-md-4">
						                        <label for="uf">UF</label>
						                        <select id="uf" class="form-control" th:field="*{endereco.uf}"
						                        th:classappend="${#fields.hasErrors('endereco.uf')} ? 'is-invalid'">
						                            <option value="">Selecione</option>
						                            <option th:each="uf : ${ufs}" th:value="${uf.sigla}" th:text="${uf.descricao}">AC</option>

						                        </select>
						                        <div class="invalid-feedback">
													<span th:errors="*{endereco.uf}"></span>
						                        </div>
						                    </div>
						                    <div class="form-group col-md-2">
						                        <label for="cep">Cep</label>
						                        <input type="text" class="form-control" id="cep" data-mask="00000-000" th:field="*{endereco.cep}"
						                        th:classappend="${#fields.hasErrors('endereco.cep')} ? 'is-invalid'"/>
						                        <div class="invalid-feedback">
													<span th:errors="*{endereco.cep}"></span>
						                        </div>
						                    </div>
						                </div>
						                <input type="hidden" id="id" th:field="*{id}"/>
						                <button type="submit" class="btn btn-primary btn-sm">Salvar</button>
						            </form>
						        </div>
						    </section>
							
						</body>
						</html>		

					Funcionário Controller:

						@Controller
						@RequestMapping("/funcionarios")
						public class FuncionarioController {

							@Autowired
							FuncionarioService service;
							
							@Autowired
							CargoService cargoService;
							
							@InitBinder
							public void initBinder(WebDataBinder binder) {
								binder.addValidators(new FuncionarioValidator(service));
							}
							
							@GetMapping("/cadastrar")
							public String cadastrar(Funcionario funcionario) {
								return "funcionario/cadastro";
							}
							
							@PostMapping("/salvar")
							public String salvar(@Valid Funcionario entity, BindingResult result, RedirectAttributes attr) {
								
								//Erros relacionados aos atributos

								if(result.hasErrors()) 
									return "funcionario/cadastro";
								
								service.insert(entity);

								//Alertas(Success e Fail)

								attr.addFlashAttribute("success", "Funcionario adicionado com sucesso.");
								return "redirect:/funcionarios/cadastrar";
							}
							
							@GetMapping("/listar")
							public String listar(ModelMap model) {
								model.addAttribute("funcionarios", service.getAll());
								return "funcionario/lista";
							}
							
							@ModelAttribute("cargos")
							public List<Cargo> listaDeCargos(){
								return cargoService.getAll();
							}
							
							@ModelAttribute("ufs")
							public UF[] getUFs() {
								return UF.values();
							}
							
							@GetMapping("/editar/{id}")
							public String preEditar(@PathVariable("id") Long id, ModelMap model) {
								model.addAttribute("funcionario", service.findById(id));
								return "funcionario/cadastro";
							}
							
							@PostMapping("/editar")
							public String editar(@Valid Funcionario entity, BindingResult result, RedirectAttributes attr) {

								//Erros relacionados aos atributos

								if(result.hasErrors()) 
									return "funcionario/cadastro";
								
								service.update(entity, entity.getId());
								
								//Alertas(Success e Fail)

								attr.addFlashAttribute("sucess", "Funcionario atualizado com sucesso");
								return "redirect:/funcionarios/cadastrar";
							}
							
							@GetMapping("/excluir/{id}")
							public String excluir(@PathVariable("id") Long id, ModelMap model) {

								service.delete(id);

								//Alertas(Success e Fail)

								model.addAttribute("success", "Funcionario removido com sucesso.");
								return listar(model);
							}
							
							@GetMapping("/buscar/nome")
							public String getFuncionariosByNome(@RequestParam("nome") String nome, ModelMap model) {
								model.addAttribute("funcionarios", service.getByName(nome));
								return "funcionario/lista";
							}
							
							@GetMapping("/buscar/cargo")
							public String getFuncionariosByCargo(@RequestParam("id") Long id, ModelMap model) {
								model.addAttribute("funcionarios", service.getByCargo(id));
								return "funcionario/lista";
							}

							@GetMapping("/buscar/data")
							public String getPorDatas(@RequestParam("entrada") @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate entrada, 
													  @RequestParam("saida") @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate saida, 
									ModelMap model) {
								model.addAttribute("funcionarios", service.getForDates(entrada, saida));
								return "funcionario/lista";
							}
						}

				**********************************************************************************************************************************************

					
				**********************************************************************************************************************************************
			
			Lista:

				**********************************************************************************************************************************************

				Departamento:

					Página Departamento:

						<!DOCTYPE html>

						//Puxa o Layout

						<html layout:decorate="~{layout}">
						<head><meta charset="UTF-8"/></head>
						<body>

							//Substitui o section corpo por esse fragmento abaixo

						    <section class="layout-content" layout:fragment="corpo">

						        <nav class="navbar navbar-expand-md bg-light">
						            <div class="collapse navbar-collapse" id="navbarsExampleDefault">
						                <ul class="navbar-nav mr-auto">
						                    <li class="nav-item active">
						                        <i class="oi oi-caret-right"></i>
						                        <span>Lista de Departamentos</span>
						                    </li>
						                </ul>
						                <a class="btn btn-primary btn-md" th:href="@{/departamentos/cadastrar}" role="button">
						                    <span class="oi oi-plus" title="Cadastro" aria-hidden="true"></span>
						                    <span>Novo Departamento</span>
						                </a>
						            </div>
						        </nav>

						        <div class="container" id="listagem">

						        	//Alertas: Sucess and Fail

									<div th:replace="fragments/alert"></div>

						            <div class="table-responsive">
						                <table class="table table-striped table-hover table-sm">
						                    <thead>
						                    <tr>
						                        <th>#</th>
						                        <th>Nome</th>
						                        <th>Ação</th>
						                    </tr>
						                    </thead>
						                    <tbody>
							                    <tr th:each="departamento : ${departamentos}">
							                        <td th:text="${departamento.id}">3</td>
							                        <td th:text="${departamento.nome}">Administração</td>
							                        <td colspan="2">
							                            <a class="btn btn-info btn-sm" th:href="@{/departamentos/editar/{id} (id=${departamento.id})}" role="button">
							                                <span class="oi oi-brush" title="Editar" aria-hidden="true"></span>
							                            </a>

							                            // Modal, aciona para perguntar se o usuario deseja realizar a exclusão, JS relacionado presente na página Layout

							                            <button th:id="${'btn_departamentos/excluir/' + departamento.id}" type="button" class="btn btn-danger btn-sm"
							                            		data-toggle="modal" data-target="#myModal">
							                                <span class="oi oi-circle-x" title="Exclusão desabilitada" aria-hidden="true"></span>
							                            </button>
							                        </td>
							                    </tr>
						                    </tbody>
						                </table>
						            </div>
						        </div>
						    //Declaracao do Moodal , substitui esse div pelo Modal 

							<div th:replace="fragments/modal :: modal"></div>
						    </section>

						</body>
						</html>		

				**********************************************************************************************************************************************


				**********************************************************************************************************************************************

				Cargo:

					Página Cargo:

						<!DOCTYPE html>
						
						//Puxa o Layout
						<html layout:decorate="~{layout}">
						<head><meta charset="UTF-8"/></head>
						<body>

							//Substitui o section corpo pelo section abaixo

						    <section class="layout-content" layout:fragment="corpo">

						        <nav class="navbar navbar-expand-md bg-light">
						            <div class="collapse navbar-collapse" id="navbarsExampleDefault">
						                <ul class="navbar-nav mr-auto">
						                    <li class="nav-item active">
						                        <i class="oi oi-caret-right"></i>
						                        <span>Lista de Cargos</span>
						                    </li>
						                </ul>
						            </div>
						            <a class="btn btn-primary btn-md" th:href="@{/cargos/cadastrar}" role="button">
						                <span class="oi oi-plus" title="Cadastro" aria-hidden="true"></span>
						                <span>Novo Cargo</span>
						            </a>
						        </nav>

						        <div class="container" id="listagem">
									

									// Alertas(Success, Fail)						        	
						        	<div th:replace="fragments/alert"></div>
						        
						            <div class="table-responsive">
						                <table class="table table-striped table-hover table-sm">
						                    <thead>
						                    <tr>
						                        <th>#</th>
						                        <th>Cargo</th>
						                        <th>Departamento</th>
						                        <th>Ação</th>
						                    </tr>
						                    </thead>
						                    <tbody>
						                    <tr th:each="cargo : ${cargos}">
						                        <td th:text="${cargo.id}"></td>
						                        <td th:text="${cargo.nome}"></td>
						                        <td th:text="${cargo.departamento.nome}"></td>
						                        <td colspan="2">
						                            <a class="btn btn-info btn-sm" th:href="@{/cargos/editar/{id} (id=${cargo.id})}" role="button">
						                                <span class="oi oi-brush" title="Editar" aria-hidden="true"></span>
						                            </a>

						                            // Modal, aciona para perguntar se o usuario deseja realizar a exclusão, JS relacionado presente na página Layout

						                            <button th:id="${'btn_cargos/excluir/' + cargo.id}" type="button" class="btn btn-danger btn-sm"
						                            		data-toggle="modal" data-target="#myModal">
						                                <span class="oi oi-circle-x" title="Exclusão Habilitada" aria-hidden="true"></span>
						                            </button>
						                        </td>
						                    </tr>
						                    </tbody>
						                </table>
						            </div>
						        </div>

						     //Declaracao do Moodal , substitui esse div pelo Modal 
						    
						    <div th:replace="fragments/modal :: modal"></div>
						    </section>
							    
						</body>
						</html>		

				**********************************************************************************************************************************************

				**********************************************************************************************************************************************

				Funcionario:

					Página Funcionário:

						<!DOCTYPE html>

						// Puxa o Layout

						<html layout:decorate="~{layout}">
						<head><meta charset="UTF-8"/></head>
						<body>

							// Substitui a section corpo(no layout) pela section abaixo

						    <section class="layout-content" layout:fragment="corpo">
						    
						        <nav class="navbar navbar-expand-md bg-light">
						            <div class="collapse navbar-collapse" id="navbarsExampleDefault">
						                <ul class="navbar-nav mr-auto">
						                    <li class="nav-item active">
						                        <i class="oi oi-caret-right"></i>
						                        <span>Lista de Funcionários</span>
						                    </li>
						                </ul>
						                <a class="btn btn-primary btn-md" th:href="@{/funcionarios/cadastrar}" role="button">
						                    <span class="oi oi-plus" title="Cadastro" aria-hidden="true"></span>
						                    <span>Cadastrar Funcionários</span>
						                </a>
						            </div>
						        </nav>

						        <div class="container">
									
						            <p>
						                <i class="oi oi-magnifying-glass"></i><span></span>
						                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseNome"
						                        aria-controls="collapseNome">Nome
						                </button>
						                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseCargo"
						                        aria-controls="collapseCargo">Cargo
						                </button>
						                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseData"
						                        aria-controls="collapseData">Datas
						                </button>
						            </p>
						            <div class="row">
						                <div class="col">
						                    <div class="collapse" id="collapseNome">

						                        <nav class="navbar navbar-light bg-light">
						                            <form class="form-inline" method="GET" th:action="@{/funcionarios/buscar/nome}">
						                                <input class="form-control mr-sm-2" type="search" placeholder="nome" aria-label="Search"
						                                       th:name="nome" />
						                                <button class="btn btn-outline-success my-2 my-sm-0">Search</button>
						                            </form>
						                        </nav>

						                    </div>
						                </div>
						            </div>
						            <div class="row">
						                <div class="col">
						                    <div class="collapse" id="collapseCargo">

						                        <nav class="navbar navbar-light bg-light">
						                            <form class="form-inline" method="GET" th:action="@{/funcionarios/buscar/cargo}">
						                                <select class="form-control mr-sm-2" th:name="id" aria-label="Search">
						                                    <option value="">Cargo</option>
						                                    <option th:each="cargo : ${cargos}"
						                                    		th:value="${cargo.id}" th:text="${cargo.nome}"></option>
						                                </select>
						                                <button class="btn btn-outline-success my-2 my-sm-0">Search</button>
						                            </form>
						                        </nav>

						                    </div>
						                </div>
						            </div>
						            <div class="row">
						                <div class="col">
						                    <div class="collapse" id="collapseData">

						                        <nav class="navbar navbar-light bg-light">
						                            <form class="form-inline" method="GET" th:action="@{/funcionarios/buscar/data}">
						                                <input class="form-control mr-sm-2" type="date" aria-label="Search"
						                                       th:name="entrada" />
						                                <input class="form-control mr-sm-2" type="date" aria-label="Search"
						                                       th:name="saida" />
						                                <button class="btn btn-outline-success my-2 my-sm-0">Search</button>
						                            </form>
						                        </nav>

						                    </div>
						                </div>
						            </div>

									
									
									
						            <div class="table-responsive">
						            	

						            	//Alertas: Success e Fail
						            	<div th:replace="fragments/alert"></div>
						            
						                <table class="table table-striped table-hover table-sm">
						                    <thead>
						                    <tr>
						                        <th>#</th>
						                        <th th:text="#{tabela.funcionario.col.nome}"></th>
						                        <th th:text="#{tabela.funcionario.col.salario}"></th>
						                        <th th:text="#{tabela.funcionario.col.departamento}">Departamento</th>
						                        <th th:text="#{tabela.funcionario.col.cargo}"></th>
						                        <th th:text="#{tabela.funcionario.col.endereco}"></th>
						                        <th th:text="#{tabela.funcionario.col.dataEntrada}"></th>
						                        <th th:text="#{tabela.funcionario.col.dataSaida}"></th>
						                        <th th:text="#{tabela.funcionario.col.acao}"></th>
						                    </tr>
						                    </thead>
						                    <tbody>
						                    <tr th:each="funcionario : ${funcionarios}">
						                        <td th:text="${funcionario.id}"></td>
						                        <td th:text="${funcionario.nome}"></td>
						                        <td th:text="|R$ ${{funcionario.salario}}|"></td>
						                        <td th:text="${funcionario.cargo.departamento.nome}"></td>
						                        <td th:text="${funcionario.cargo.nome}"></td>
						                        <td>

						                        	//Função presente no JavaScript do Layout
						                        
						                            <button type="button" class="btn btn-secondary btn-sm" data-container="body"
						                                    data-toggle="popover" data-placement="right"
						                                    th:attr="data-content=${#strings.concat(
						                                    	funcionario.endereco.logradouro, ', ',
						                                    	funcionario.endereco.numero, ' ',
						                                    	funcionario.endereco.complemento, ' - ',
						                                    	funcionario.endereco.bairro, ', ',
						                                    	funcionario.endereco.cidade, ' - ',
						                                    	funcionario.endereco.uf.sigla, ' - ',
						                                    	funcionario.endereco.cep
						                                    )}">
						                                
						                                <span class="oi oi-eye" title="Visualizar" aria-hidden="true"></span>
						                            </button>
						                        </td>
						                        <td th:text="${#temporals.format(funcionario.dataEntrada, 'dd/MM/yyyy')}"></td>
						                        <td th:text="${#temporals.format(funcionario.dataSaida, 'dd/MM/yyyy')}"></td>
						                        <td colspan="2">
						                            <a class="btn btn-info btn-sm" th:href="@{/funcionarios/editar/{id} (id=${funcionario.id})}" role="button">
						                                <span class="oi oi-brush" title="Editar" aria-hidden="true"></span>
						                            </a>

						                             // Modal, aciona para perguntar se o usuario deseja realizar a exclusão, JS relacionado presente na página Layout
						                            <button th:id="${'btn_funcionarios/excluir/' + funcionario.id}" type="button" class="btn btn-danger btn-sm"
						                                    data-toggle="modal" data-target="#myModal">
						                                <span class="oi oi-circle-x" title="Excluir" aria-hidden="true"></span>
						                            </button>
						                        </td>
						                    </tr>
						                    </tbody>
						                </table>
						            </div>
						        </div>

						    //Declaracao do Moodal , substitui esse div pelo Modal 
						    
						    <div th:replace="fragments/modal :: modal"></div>
						    </section>

						</body>
						</html>		

				**********************************************************************************************************************************************

				

			Home:
			
				**********************************************************************************************************************************************
			
				<!DOCTYPE html>

				// Aqui importamos todo layout
				
				<html layout:decorate="~{layout}">
				<head><meta charset="UTF-8" /></head>
				<body>
						
				// O corpo do layout é substituído pelo fragmento abaixo: 

					<section class="layout-content" layout:fragment="corpo">
					
						<nav class="navbar navbar-expand-md bg-light">
							<div class="collapse navbar-collapse" id="navbarsExampleDefault">
								<ul class="navbar-nav mr-auto">
									<li class="nav-item active">
										<i class="oi oi-caret-right"></i>
										<span>Home</span>
									</li>
								</ul>
							</div>
						</nav>
						
						<div class="container">
							<div id="list-home" class="row">
								<div class="col-4">
									<div class="list-group" id="list-tab" role="tablist">
										<a class="list-group-item list-group-item-action active"
											id="list-spring-boot-list" data-toggle="list" href="#spring-boot"
											role="tab" aria-controls="spring-boot">Spring-Boot</a> <a
											class="list-group-item list-group-item-action" id="list-sts-list"
											data-toggle="list" href="#sts" role="tab" aria-controls="sts">Spring
											Tool Suite</a> <a class="list-group-item list-group-item-action"
											id="list-thymeleaf-list" data-toggle="list" href="#thymeleaf"
											role="tab" aria-controls="thymeleaf">Thymeleaf</a> <a
											class="list-group-item list-group-item-action"
											id="list-webjars-list" data-toggle="list" href="#webjars"
											role="tab" aria-controls="webjars">WebJars</a> <a
											class="list-group-item list-group-item-action"
											id="list-hibernate-list" data-toggle="list" href="#hibernate"
											role="tab" aria-controls="hibernate">Hibernate</a> <a
											class="list-group-item list-group-item-action"
											id="list-bootstrap-list" data-toggle="list" href="#bootstrap"
											role="tab" aria-controls="bootstrap">Bootstrap 4</a>
									</div>
								</div>
								<div class="col-8">
									<div class="tab-content" id="nav-tabContent">
										<div class="tab-pane fade show active" id="spring-boot"
											role="tabpanel" aria-labelledby="list-spring-boot-list">
											<a href="https://projects.spring.io/spring-boot/">Spring Boot</a>
											makes it easy to create stand-alone, production-grade Spring
											based Applications that you can "just run". We take an
											opinionated view of the Spring platform and third-party libraries
											so you can get started with minimum fuss. Most Spring Boot
											applications need very little Spring configuration.
										</div>
										<div class="tab-pane fade" id="sts" role="tabpanel"
											aria-labelledby="list-sts-list">
											The <a href="https://spring.io/tools">Spring Tool Suite</a> is an
											Eclipse-based development environment that is customized for
											developing Spring applications. It provides a ready-to-use
											environment to implement, debug, run, and deploy your Spring
											applications, including integrations for Pivotal tc Server,
											Pivotal Cloud Foundry, Git, Maven, AspectJ, and more.
										</div>
										<div class="tab-pane fade" id="thymeleaf" role="tabpanel"
											aria-labelledby="list-thymeleaf-list">
											<a href="http://www.thymeleaf.org/">Thymeleaf</a> is a modern
											server-side Java template engine for both web and standalone
											environments. With modules for Spring Framework, a host of
											integrations with your favourite tools, and the ability to plug
											in your own functionality, Thymeleaf is ideal for modern-day
											HTML5 JVM web development — although there is much more it can
											do.
										</div>
										<div class="tab-pane fade" id="webjars" role="tabpanel"
											aria-labelledby="list-webjars-list">
											<a href="https://www.webjars.org/">WebJars</a> are client-side
											web libraries (e.g. jQuery ; Bootstrap) packaged into JAR (Java
											Archive) files.
										</div>
										<div class="tab-pane fade" id="hibernate" role="tabpanel"
											aria-labelledby="list-hibernate-list">
											<a href="http://hibernate.org/orm/">Hibernate ORM</a> enables
											developers to more easily write applications whose data outlives
											the application process. As an Object/Relational Mapping (ORM)
											framework, Hibernate is concerned with data persistence as it
											applies to relational databases (via JDBC). <br />In addition to
											its own "native" API, Hibernate is also an implementation of the
											Java Persistence API (JPA) specification. As such, it can be
											easily used in any environment supporting JPA including Java SE
											applications, Java EE application servers, Enterprise OSGi
											containers, etc.
										</div>
										<div class="tab-pane fade" id="bootstrap" role="tabpanel"
											aria-labelledby="list-bootstrap-list">
											<a href="https://getbootstrap.com/">Bootstrap</a> is an open
											source toolkit for developing with HTML, CSS, and JS. Quickly
											prototype your ideas or build your entire app with our Sass
											variables and mixins, responsive grid system, extensive prebuilt
											components, and powerful plugins built on jQuery.
										</div>
									</div>
								</div>
							</div>
						</div>
						
					</section>		

				</body>
				</html>
			
				**********************************************************************************************************************************************

		Fragmentos Html:

		o	Alert:

				// So mostrará o success se o mesmo não voltar nulo

				<div th:if = "${success} != null">
					<div class="alert alert-success alert-dismissible fade show" role="alert">
						<i class="oi oi-check"></i>
						<span>
							<strong th:text="${success}"></strong>	
						</span>
						<button type="button" class="close" data-dismiss="alert" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
				</div>
				
				// So mostrará o fail se o mesmo não voltar nulo

				<div th:if="${fail} != null">
					<div class="alert alert-danger alert-dismissible fade show" role="alert">
						<i class="oi oi-check"></i>
						<span>
							<strong th:text="${fail}"></strong>
						</span>
						<button type="button" class="close" data-dismiss="alert" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
						
					</div>
				</div>

		o	Footer:

				<!DOCTYPE html>
				<html>
				<head>
				<meta charset="UTF-8">
				</head>
				<body>
					<footer class="layout-footer" th:fragment="rodape">
						<div class="container">
							<span class="footer-copy">&copy; 2019 AJardel. Todos os direitos reservados.</span>
						</div>
					</footer> 
				</body>
				</html>

		o	Header:

				<!DOCTYPE html>
				<html>
				<head>
				<meta charset="UTF-8">
				</head>
				<body>
					<header th:fragment="cabecalho">
						<nav class="navbar navbar-inverse navbar navbar-dark bg-dark fixed-top">
							<div class="container-fluid">
								<div class="navbar-header">
									<button type="button" class="btn btn-dark navbar-toggle pull-left">
										<i class="oi oi-menu"></i>
									</button>
									<a class="navbar-brand " href="#">Curso Spring Boot</a>
								</div>
							</div>
						</nav>
					</header>
				</body>
				</html>

			Modal:

				<!DOCTYPE html>
				<html>
				<head><meta charset="UTF-8"></head>
				<body>

					<div class="modal fade" tabindex="-1" role="dialog" id="myModal" th:fragment="modal">
					  <div class="modal-dialog" role="document">
					    <div class="modal-content">
					      <div class="modal-header">
					        <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
					        <h4 class="modal-title">Atenção</h4>
					      </div>
					      <div class="modal-body">
					        <p>Clique em Ok para concluir a exclusão.&hellip;</p>
					      </div>
					      <div class="modal-footer">
					        <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
					        <button id="ok_confirm" type="button" class="btn btn-primary">Ok</button>
					      </div>
					    </div>
					  </div>
					</div>
					
				</body>
				</html>

		o	Sidebar:

				<!DOCTYPE html>
				<html>
				<head>
				<meta charset="UTF-8">
				</head>
				<body>

					<nav class="sidebar sidebar-open" th:fragment="nav-sidebar">
						<ul class="nav nav-pills">
							<li class="nav-item"><a class="nav-link " href="/"> 
							<i class="oi oi-home"></i> <span th:text="#{sidebar.link.home}">Home</span>
							</a></li>
						</ul>
						<ul class="nav nav-pills">
							<li class="nav-item"><span class="nav-link active" th:text="#{sidebar.titulo.departamento}">Departamentos</span></li>
							<li class="nav-item"><a class="nav-link"
								th:href="@{/departamentos/cadastrar}"> <i class="oi oi-plus"></i> 
								<span th:text="#{sidebar.link.cadastrar}">Cadastrar</span>
							</a></li>
							<li class="nav-item"><a class="nav-link"
								th:href="@{/departamentos/listar}"> <i class="oi oi-spreadsheet"></i>
								<span th:text="#{sidebar.link.listar}">Listar </span>
							</a></li>
						</ul>

						<ul class="nav nav-pills">
							<li class="nav-item"><span class="nav-link active" th:text="#{sidebar.titulo.cargo}">Cargos</span></li>
							<li class="nav-item"><a class="nav-link" 
								th:href="@{/cargos/cadastrar}"> <i class="oi oi-plus"></i> <span th:text="#{sidebar.link.cadastrar}">Cadastrar </span>
							</a></li>
							<li class="nav-item"><a class="nav-link" 
								th:href="@{/cargos/listar}"> <i
									class="oi oi-spreadsheet"></i> <span th:text="#{sidebar.link.listar}">Listar </span>
							</a></li>
						</ul>

						<ul class="nav nav-pills">
							<li class="nav-item"><span class="nav-link active" th:text="#{sidebar.titulo.funcionario}">Funcionários</span></li>
							<li class="nav-item"><a class="nav-link" 
								th:href="@{/funcionarios/cadastrar}"> <i class="oi oi-plus"></i> <span th:text="#{sidebar.link.cadastrar}">Cadastrar </span>
							</a></li>
							<li class="nav-item"><a class="nav-link" 
								th:href="@{/funcionarios/listar}"> <i class="oi oi-spreadsheet"></i> <span th:text="#{sidebar.link.listar}">Listar </span>
							</a></li>
						</ul>
					</nav>

				</body>
				</html>

			Validacao:

				<!DOCTYPE html>
				<html>
				<head><meta charset="UTF-8"></head>
				<body>

					<div th:if="${#fields.hasAnyErrors()}" th:fragment="validacao">
						<div class="alert alert-danger alert-dismissible fade show" role = "alert">
							<div th:each = "error : ${#fields.detailedErrors()}">
								<i class="oi oi-warning"></i>
								<span th:text="${error.message}"></span>
							</div>
							<button type="button" class="close" data-dismiss="alert" aria-label="Close">
								<span aria-hidden="true">&times;</span>
							</button>
						</div>
					</div>

				</body>
				</html>



