GitHub
	
	Parte 1 - Criando um novo projeto

		1. Crie um novo projeto no seu ambiente de desenvolvimento
		
		2. Crie um novo repositório no Github
			a. ATENÇÃO: se seu ambiente de desenvolvimento não gera o arquivo .gitignore
			automaticamente, escolha o seu tipo desejado de .gitignore na tela de criação de repositório do
			Github
		3. Abra um terminal na pasta do seu projeto
		
		4. IMPORTANTE: certifique-se de estar identificado no Git do seu computador (nome e email)
		
			git config --list
			git config --global user.name "AllissonJ"
			git config --global user.email "allissonjardel@gmail.com"

		5.	Faça os comandos a seguir

			git init 		Inicia um novo repositório local na pasta do seu projeto

			git remote add origin https://github.com/ajao123/aula1-github.git 		Associa seu repositório local ao repositório remoto, 
																					com o apelido de "origin.

			git pull origin master
				ATENÇÃO: este comando só é necessário se 			Atualiza seu repositório local em relação ao repositório remoto
				você criou o .gitignore pelo Github

			git status												Verifica arquivos

			git add .												Adiciona todos arquivos ao stage

			git commit -m "Projeto criado"							Salva uma nova versão do projeto

			git push -u origin master								Envia o repositório local para o repositório remoto

				Nota: nas próximas vezes 
				basta fazer: git push

	Parte 2 - Demo - Trabalhando com um projeto existente
		
		1. IMPORTANTE: certifique-se de estar identificado no Git do seu computador (nome e email)

			USUÁRIOS WINDOWS: verifique o "Cofre" (gerenciador de credenciais)
			git config --list
			git config --global user.name "Nelio Alves"
			git config --global user.email "acenelio@gmail.com"


		2. Se o projeto já não estiver no seu computador, Clonar o repositório do Github

			git clone https://github.com/acenelio/meuprojeto.git


		3. Altere o que você precisar no projeto


		4. Commitar as mudanças feitas no projeto

			4.1. Verificar arquivos:

				git status

			4.2. Realizar o commit:

				git add .
				git commit -m "Mensagem explicativa"

			4.3. Listar histórico de commits:

				git log --oneline


			5. Salvar projeto atualizado no seu Github (push)

				git push

	Parte 3 - Kit de primeiros socorros

		1 - Quero desfazer tudo que eu fiz desde o último commit, apaga os commits feitos

			git clean -df
			git checkout -- .	


		2 - Preciso remover o último commit, porém mantendo os arquivos do jeito que estão

			git reset --soft HEAD~1

			E para não gerar inconsistência, Preciso apagar o último commit no Github

				git push -f origin HEAD^:master

		3 - Preciso remover o último commit, inclusive as alterações nos arquivos

			git reset --hard HEAD~1

			Apagar também do github:

				git push -f origin HEAD^:master

			Ou, para voltar como estava:

				git pull origin master

		4 - Quero alterar temporariamente os arquivos do projeto de modo a ficarem no estado do commit informado
			
			ATENÇÃO: não podem haver modificações não commitadas no projeto.

			NOTA: para voltar ao último commit faça: git checkout master.

				git checkout <código do commit>

				EXEMPLO: git checkout e8a52f3

		5 - Quero mudar o meu repositório remoto "origin"

			git remote set-url origin https://github.com/ajao123/novoprojeto.git

			git push -u origin master


		6 - Entrei no VIM por engano. Como sair?

			Tecle ESC, depois digite :q! e tecle ENTER