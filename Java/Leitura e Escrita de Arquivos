Leitura de Arquivos


1 - Usando File

public static void main(String[] args) {

	File file = new File("c:\\Users\\allis\\Desktop\\Funções\\in.txt");
	Scanner scan = null;
	try {
		scan = new Scanner(file);
		while(scan.hasNextLine()) {
			System.out.println(scan.nextLine());
		}
	}catch(IOException e) {
		System.out.println("Error: "+e.getMessage());
	}
	finally {
		if(scan != null) {
			scan.close();
		}
	}
}


2 - Usando BufferedReader e FileReader 

public static void main(String[] args) {

		// TODO Auto-generated method stub
		String path = "c:\\Users\\allis\\Desktop\\Funções\\in.txt";

		BufferedReader br = null;
		FileReader fr = null;

		try {
			fr = new FileReader(path);
			br = new BufferedReader(fr);
			
			String line = br.readLine();

			while(line != null) {
				System.out.println(line);
				line = br.readLine();
			}
	
		}catch(IOException e) {
			System.out.println("Erro: "+e.getMessage());
		
		}finally {
			try {
				if(br != null) {
					br.close();
				}
				if(fr != null) {
					fr.close();
				}
			}catch(IOException e) {
				e.printStackTrace();
			}
		}
		
	}

	3 - Usando BufferedReader e FileReader (try-with-resources)


		public static void main(String[] args) {
		
		String path =  "c:\\Users\\allis\\Desktop\\Funções\\in.txt";
		try(BufferedReader br = new BufferedReader(new FileReader(path))){
			String line = br.readLine();
			
			while(line != null) {
				System.out.println(line);
				line = br.readLine();
			}
		}catch(IOException e) {
				System.out.println(e.getMessage());
		}
	}

	Escrita em Arquivos

	public static void main(String[] args) {
		String[] msg = {"arroz","feijao","macarrao"};
		String path = "c:\\Users\\allis\\Desktop\\Funções\\out.txt";
		//try(BufferedWriter br = new BufferedWriter(new FileWriter(path,true))){ não recria o arquivo
		try(BufferedWriter br = new BufferedWriter(new FileWriter(path))){
			for(int i = 0; i < msg.length; i++) {
				br.append(msg[i]);
				br.newLine();
			}
		}catch(IOException e) {
			e.printStackTrace();
		}
	}

	Acessando arquivos presentes numa determinada pasta || Criando Subpastas

	Scanner scan = new Scanner(System.in);
		System.out.println("Enter a folder path:");
		String strPath = scan.nextLine();
		
		File path = new File(strPath);
		
		//Acessando as pastas presentes em uma determinada pasta
		File[] folders = path.listFiles(File::isDirectory);
		System.out.println("FOLDERS:");
		for(File folder : folders) {
			System.out.println(folder);
		}
		
		//Acessando os arquivos presentes em uma determinada pasta
		File[] files = path.listFiles(File::isFile);
		System.out.println("FILES");
		for(File file : files) {
			System.out.println(file);
		}
		
		//Criando uma subpasta,retorna um boolean
		if(new File(strPath + "\\feijao").mkdir()) {
			System.out.println("sucess");
		}



		Acessando os dados de uma pasta ou arquivo


		File newPath = new File(strPath);
		System.out.println("Name: "+ newPath.getName());
		System.out.println("Path: "+ newPath.getPath());
		System.out.println("Parent: "+ newPath.getParent());


PROPERTIES 

	Escrita de Arquivos

		import java.io.FileOutputStream;
		import java.io.IOException;
		import java.util.Properties;
		public class App {

		 public static void main(String[] args) {
			 Properties prop = new Properties();
				try {

					prop.setProperty("database","localhost");
				 	prop.setProperty("dbuser","mkyong");
				 	prop.setProperty("dbpassword","password");
			 		prop.store(new FileOutputStream("config.properties"),null);
			 
			 	} catch (IOException ex) {
			 		ex.printStackTrace();
			 	}
			 }
		}

	Arquivos de propriedades - leitura 

		import java.io.FileInputStream;
		import java.io.IOException;
		import java.util.Properties;

		public class App {
			public static void main(String[] args) {
			 Properties prop = new Properties();
				try {

					 prop.load(new FileInputStream("config.properties"));
					 // get the property value and print it out
					 System.out.println(prop.getProperty("database"));
					 System.out.println(prop.getProperty("dbuser"));
					 System.out.println(prop.getProperty("dbpassword"));

				 } catch (IOException ex) {

				 ex.printStackTrace();

				}
			}
		}

	


 		import java.io.FileInputStream;
		import java.io.IOException;
		import java.util.Properties;

		public class App {
			public static void main(String[] args) {
			 Properties prop = new Properties();
				try {

					 prop.load(App.class.getClassLoader().getResourceAsStream("config.properties")); 

					 // get the property value and print it out
					 System.out.println(prop.getProperty("database"));
					 System.out.println(prop.getProperty("dbuser"));
					 System.out.println(prop.getProperty("dbpassword"));

				 } catch (IOException ex) {

				 ex.printStackTrace();

				}
			}
		}

	Leitura de Arquivo ZIP


		package	files;	

		import java.io.BufferedReader;	
		import java.io.FileInputStream;	
		import java.io.InputStream;	
		import java.io.InputStreamReader;	
		import java.util.zip.ZipInputStream;

		public class LeArquivoZip{	

			public static void main(String[]	args)	throws Exception	{	
				InputStream is = new FileInputStream("/Users/regis/teste2.zip");	
				ZipInputStream zis = new ZipInputStream(is);	
				zis.getNextEntry();	
				InputStreamReader isr =	new InputStreamReader(zis);	
				BufferedReader br =	new BufferedReader(isr);	
				String str;	

				while((str	=	br.readLine())	!=	null){	
					System.out.println(str);	
				}	

				br.close();	
			}	

		}	

	Serialização 

		package serializacao;	
		import java.io.FileOutputStream;	
		import java.io.IOException;	
		import java.io.ObjectOutputStream;	
		public class	Serializa	{	
			public static void main(String	[]	args)	{	
				Empregado e = new Empregado();	
				e.setNome("Reyan Ali");	
				e.setEndereco("Phokka Kuan,	Ambehta Peer");	
				e.setCpf(11122333);	
				e.setNumero(101);	
				try	{	

					ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("/tmp/empregado.ser"));	
					out.writeObject(e);	
					out.close();	
					fileOut.close();	
					System.out.printf("Serializado");	

				}catch(IOException i)	{	

					i.printStackTrace();	

				}	
			}	
		}

	Desserialização 

		package serializacao;	
		import java.io.FileInputStream;	
		import java.io.ObjectInputStream;	

			public class Desserializa {	
				public static void main(String	[]	args){	
				Empregado e	= null;	
				try	{	
					ObjectInputStream in = new ObjectInputStream(new FileInputStream("/tmp/empregado.ser"));	
					e = (Empregado)	in.readObject();	
					in.close();	
					fileIn.close();	
				}catch(Exception	ex)	{	
							ex.printStackTrace();	
				}	
				System.out.println(e);	
				}	
			}	


	//Falta Testar
 
    ...

	Scraping Tools
	• jsoup: Java HTML Parser
	▫ https://jsoup.org/
	▫ API para extração e manipulação de dados de
	documentos HTML.


	Document doc	=	Jsoup.connect("http://example.com/").get();	
	String title	=	doc.title();	
	File	input	=	new	File("/tmp/input.html");	
	Document doc	=	Jsoup.parse(input,	"UTF-8",	"http://
	example.com/");	
	Elements links	=	doc.select("a[href]");	//	a	with href
	Elements pngs	=	doc.select("img[src$=.png]");	
	Element masthead	=	doc.select("div.masthead").first();	
	Elements resultLinks	=	doc.select("h3.r	>	a");	