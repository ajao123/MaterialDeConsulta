HashCode e Equals

Funções contains, presentes em maps e sets.

Client

public class Client implements Comparable<Client>{
	private String name;
	private String email;
		.
		.
		.

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Client other = (Client) obj;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}

	@Override
	public int compareTo(Client o) {
		return name.compareTo(o.getName());
	}
}

Program

public class Program {
	public static void main(String[] args) {
		Client c1 = new Client("Allisson Jardel","allissonjardel@gmail.com");
		Client c2 = new Client("Allisson Jardel","allissonjardel@gmail.com");
		
		System.out.println(c1.hashCode());
		System.out.println(c2.hashCode());
		System.out.println(c1.compareTo(c2));
	}
}